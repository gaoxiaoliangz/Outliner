{"version":3,"sources":["utils.js","index.js"],"names":["guid","s4","Math","floor","random","toString","substring","last","arr","length","H_TAGS","generate","input","markHTags","hTags","findHTags","toc","buildStructure","tocDOM","genTOCDom","tags","exec","prototype","forEach","call","children","includes","element","tagName","push","childNodes","$container","markTags","tag","getAttribute","setAttribute","getLevel","hTag","Number","substr","addEleToSection","sections","lastLevel","lastSection","index","level","section","lastChildNode","lastChildNodeLevel","elementLevel","getHTagText","innerHTML","createChildren","$ul","document","createElement","$li","template","hash","child","appendChild","$liWithChildren","window"],"mappings":";AAcC,aAdM,SAASA,IACRC,IAAAA,EAAK,WACFC,OAAAA,KAAKC,MAA4B,OAArB,EAAID,KAAKE,WACzBC,SAAS,IACTC,UAAU,IAERL,OAAAA,IAAOA,IAGT,SAASM,EAAKC,GACf,GAACA,EAGEA,OAAAA,EAAIA,EAAIC,OAAS,GACzB,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAdeT,QAAAA,KAAAA,EASAO,QAAAA,KAAAA;;AC4GhB,aApHA,IAAA,EAAA,QAAA,WAEMG,EAAS,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAExCC,EAAW,SAACC,GAA8B,IAArBC,GAAqB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAArBA,UAAAA,OAAY,IAAA,GAAgB,EAE/CC,EAAQC,EAAUH,GACpBC,GACOC,EAAAA,GAELE,IAAAA,EAAMC,EAAeH,GAEpBI,OADQC,EAAUH,IAIrBD,EAAY,SAAc,GACxBK,IAAAA,EAAO,GAWNA,OAVM,SAAPC,EAAmB,GACjBC,MAAAA,UAAUC,QAAQC,KAAKC,EAAU,SAAW,GAC5Cf,EAAOgB,SAASC,EAAQC,SACrBC,EAAAA,KAAKF,GACDA,EAAQG,YAA4C,IAA9BH,EAAQG,WAAWrB,QAC7CkB,EAAAA,EAAQG,cAIdC,CAAAA,EAAWD,YACTV,GAGHY,EAAW,SAAQ,GAMhBZ,OALFG,EAAAA,QAAQ,SAAO,GACbU,EAAIC,aAAa,OAChBC,EAAAA,aAAa,MAAM,EAAvB,EAAA,WAGGf,GAGHgB,EAAW,SAAQ,GACnB,GAACC,EAGEC,OAAAA,OAAOD,EAAKT,QAAQW,OAAO,KAO9BtB,EAAiB,SAAQ,GACvBuB,IAqBAC,EAAW,GACbC,OAAJ,EACIC,OAAJ,EAWOF,OAVFlB,EAAAA,QAAQ,SAACI,EAASiB,GACfC,IAAAA,EAAQT,EAAST,IAClBe,GAAaN,EAASO,EAAYhB,UAAYkB,EACxChB,EAAAA,KAAK,CAAEF,QAAF,IA3BM,SAAlBa,EAAmBb,EAASmB,GAC5B,GAACA,EAAQrB,SAAT,CAIEsB,IAAAA,GAAgB,EAAKD,EAAAA,MAAAA,EAAQrB,WAAa,GAC1CuB,EAAqBD,GAAiBX,EAASW,EAAcpB,SAC7DsB,EAAeb,EAAST,GAE1BsB,IAAiBD,EAIjBC,EAAeD,GAAsBD,EAActB,SACrCE,EAAAA,EAASoB,GAGbtB,EAAAA,SAAW,CAAC,CAAEE,QAAF,IAPhBF,EAAAA,SAASI,KAAK,CAAEF,QAAF,SARdF,EAAAA,SAAW,CAAC,CAAEE,QAAF,IA2BJA,CAAAA,EAASgB,GAEfE,EAAAA,EACEJ,EAAAA,EAASA,EAAShC,OAAS,KAEpCgC,GAGHS,EAAc,SAAQ,GACtB,OAACb,EAGEA,EAAKc,UAFH,IAKLhC,EAAY,SAAY,GAkBrBiC,OAjBgB,SAAjBA,EAA6B,GAC3BC,IAAAA,EAAMC,SAASC,cAAc,MAa5BF,OAZE9B,EAAAA,QAAQ,SAAS,GAClBiC,IAAAA,EAAMF,SAASC,cAAc,MAE7BE,EAAwBC,cADjBC,EAAMhC,QAAQO,aAAa,OACF,IAAOgB,KAAAA,EAAYS,EAAMhC,SAA/D,OAGIgC,GAFAR,EAAAA,UAAYM,EACZG,EAAAA,YAAYJ,GACZG,EAAMlC,SAAU,CACZoC,IAAAA,EAAkBP,SAASC,cAAc,MAC/BK,EAAAA,YAAYR,EAAeO,EAAMlC,WAC7CmC,EAAAA,YAAYC,MAGbR,EAGFD,CAAeX,IAGxBqB,OAAA,IAAgB,CACdnD,SAAAA","file":"toc.map","sourceRoot":"../src","sourcesContent":["export function guid() {\n  const s4 = () => {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1)\n  }\n  return s4() + s4()\n}\n\nexport function last(arr) {\n  if (!arr) {\n    return\n  }\n  return arr[arr.length - 1]\n}\n\n","// @ts-check\nimport { guid, last } from './utils'\n\nconst H_TAGS = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6']\n\nconst generate = (input, { markHTags = true } = {}) => {\n  // input is dom el\n  const hTags = findHTags(input)\n  if (markHTags) {\n    markTags(hTags)\n  }\n  const toc = buildStructure(hTags)\n  const tocDOM = genTOCDom(toc)\n  return tocDOM\n}\n\nconst findHTags = $container => {\n  const tags = []\n  const exec = children => {\n    Array.prototype.forEach.call(children, element => {\n      if (H_TAGS.includes(element.tagName)) {\n        tags.push(element)\n      } else if (element.childNodes && element.childNodes.length !== 0) {\n        exec(element.childNodes)\n      }\n    })\n  }\n  exec($container.childNodes)\n  return tags\n}\n\nconst markTags = tags => {\n  tags.forEach(tag => {\n    if (!tag.getAttribute('id')) {\n      tag.setAttribute('id', guid())\n    }\n  })\n  return tags\n}\n\nconst getLevel = hTag => {\n  if (!hTag) {\n    return\n  }\n  return Number(hTag.tagName.substr(1))\n}\n\n/**\n * @param { HTMLElement[] } tags\n * @return { ({ element, children: any[] })[] }\n */\nconst buildStructure = tags => {\n  const addEleToSection = (element, section) => {\n    if (!section.children) {\n      section.children = [{ element }]\n      return\n    }\n    const lastChildNode = last(section.children) || {}\n    const lastChildNodeLevel = lastChildNode && getLevel(lastChildNode.element)\n    const elementLevel = getLevel(element)\n\n    if (elementLevel === lastChildNodeLevel) {\n      section.children.push({ element })\n      return\n    }\n    if (elementLevel > lastChildNodeLevel && lastChildNode.children) {\n      addEleToSection(element, lastChildNode)\n      return\n    }\n    lastChildNode.children = [{ element }]\n    return\n  }\n\n  const sections = []\n  let lastLevel\n  let lastSection\n  tags.forEach((element, index) => {\n    const level = getLevel(element)\n    if (!lastLevel || getLevel(lastSection.element) >= level) {\n      sections.push({ element })\n    } else {\n      addEleToSection(element, lastSection)\n    }\n    lastLevel = level\n    lastSection = sections[sections.length - 1]\n  })\n  return sections\n}\n\nconst getHTagText = hTag => {\n  if (!hTag) {\n    return ''\n  }\n  return hTag.innerHTML\n}\n\nconst genTOCDom = sections => {\n  const createChildren = children => {\n    const $ul = document.createElement('ul')\n    children.forEach(child => {\n      const $li = document.createElement('li')\n      const hash = child.element.getAttribute('id')\n      const template = `<a href=\"#${hash || ''}\">${getHTagText(child.element)}</a>`\n      $li.innerHTML = template\n      $ul.appendChild($li)\n      if (child.children) {\n        const $liWithChildren = document.createElement('li')\n        $liWithChildren.appendChild(createChildren(child.children))\n        $ul.appendChild($liWithChildren)\n      }\n    })\n    return $ul\n  }\n\n  return createChildren(sections)\n}\n\nwindow['toc'] = {\n  generate,\n}\n"]}